name: Export and Branch Solution (DEV)
on:
    workflow_dispatch:
      inputs:
        #Change this value
        solution_name:
          description: 'name of the solution to worked on from Power Platform'
          required: true
          default: Prioritz
         #Do Not change these values
        solution_exported_folder:
          description: 'folder name for staging the exported solution *do not change*'
          required: true
          default: out/exported
        solution_folder:
          description: 'staging the unpacked solution folder before check-in  *do not change*'
          required: true
          default: out/solutions
        solution_target_folder: 
         description: 'folder name to be created and checked in *do not change*'
         required: true
         default: solutions/
  jobs:
    export-from-dev:
      runs-on: windows-latest
      permissions: write-all 
      steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - run: |
            node --version
            #cp -a ./_site/. $GITHUB_WORKSPACE/release
            #cd release
            #dir
            #date > generated.txt
            #git config user.name github-actions
            #git config user.email github-actions@github.com
            #git add .
            #git commit -m "generated"
            #git push
      - name: export-unmanaged-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          environment-url: ${{secrets.PowerPlatformDevUrl}}
          app-id: ${{secrets.PowerPlatformAppID}}
          client-secret: ${{ secrets.PowerPlatformClientSecret }}
          tenant-id: ${{secrets.PowerPlatformTenantID}}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
          managed: false
      - name: export-managed-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0
        with:
          environment-url: ${{secrets.PowerPlatformDevUrl}}
          app-id: ${{secrets.PowerPlatformAppID}}
          client-secret: ${{ secrets.PowerPlatformClientSecret }}
          tenant-id: ${{secrets.PowerPlatformTenantID}}
          solution-name: ${{ github.event.inputs.solution_name }}
          solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}_managed.zip
          managed: true
      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v0
        with:
          solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
          solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
          solution-type: 'Both'
          process-canvas-apps: true
      - run: |
            cd ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
            dir
            #date > generated.txt
            #git config user.name github-actions
            #git config user.email github-actions@github.com
            #git add .
            #git commit -m "generated"
            #git push
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with: 
         name: unmanagedsolution
         path: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
      - name: branch-solution, prepare it for a PullRequest
        uses: microsoft/powerplatform-actions/branch-solution@v0
        with:
          solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
          solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-empty-commit: true