name: CD-to-Prod

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  kudos_solution_name: mpa_Kudos
  experience_solution_name: mpa_Kudos
  solution_source_folder: src
  solution_outbound_folder: out/solutions
  solution_release_folder: out/release

jobs:
  # build and pack employee experience solution (environment variables cannot be passed to the workflow_call event)
  build-and-pack-solution-ee:
    name: Build and Pack Solution for Employee Experience Base
    uses: jovadker/ppdemo/.github/workflows/build-and-pack-solution.yml@main
    with:
      solution_name: mpa_EmployeeExperienceBase
      solution_source_folder: src/mpa_EmployeeExperienceBase/src
      solution_outbound_folder: out/solutions
      
  convert-to-managed:
   needs: [ build-and-pack-solution-ee ]
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v2
     with:
       lfs: true
   - name: Install Power Platform Tools
     uses: microsoft/powerplatform-actions/actions-install@v1
   - name: Pack unmanaged solution Kudos
     uses: microsoft/powerplatform-actions/pack-solution@v1
     with:
         solution-folder: src/${{ env.kudos_solution_name }}/${{ env.solution_source_folder}}
         solution-file: ${{ env.solution_outbound_folder}}/${{ env.kudos_solution_name }}_unmanaged.zip
         solution-type: Unmanaged
   - name: Pack managed solution Kudos
     uses: microsoft/powerplatform-actions/pack-solution@v1
     with:
       solution-folder: src/${{ env.kudos_solution_name }}/${{ env.solution_source_folder}}
       solution-file: ${{ env.solution_outbound_folder}}/${{ env.kudos_solution_name }}_managed.zip
       solution-type: Managed
   - name: Upload the unmanaged solution to GH artifact store 
     uses: actions/upload-artifact@v2
     with:
       name: unmanagedSolutions
       path: ${{ env.solution_outbound_folder}}/${{ env.kudos_solution_name }}_unmanaged.zip             
   - name: Upload the managed solution to GH artifact store
     uses: actions/upload-artifact@v2
     with:
       name: managedSolutions
       path: ${{ env.solution_outbound_folder}}/${{ env.kudos_solution_name }}_managed.zip 

  release-to-prod:
    needs: [ convert-to-managed ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1
    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.solution_release_folder}}
    - run: |
        cd ${{ env.solution_release_folder}}
        dir
    - name: Import Employee Experience solution to prod environment
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: "https://orgae9e123c.crm.dynamics.com"
        app-id: ${{secrets.PPAPPID}}
        client-secret: ${{ secrets.PPAPPSECRET }}
        tenant-id: ${{secrets.PPTENANTID}}
        solution-file: ${{ env.solution_release_folder}}/${{ env.experience_solution_name }}_managed.zip
        run-asynchronously: true
  
    - run: |
        newDataverseId="cc54b39cf98e41e0969dfdd7b90e2e6a"
        newO365Id="4b143239cbbc4443a43466481bc39586"
        newOutlookId="c3a653db1d234550af69f51c22389c5d"
        cat deploymentSettings.json | jq --arg dataverseId "$newDataverseId" --arg o365Id "$newO365Id" --arg outlookId "$newOutlookId" '.ConnectionReferences[] |= 
         if .ConnectionId == "[Dataverse]" then .ConnectionId = $dataverseId
         elif .ConnectionId == "[O365]" then .ConnectionId = $o365Id
         elif .ConnectionId == "[Outlook]" then .ConnectionId = $outlookId
        else . end' > temp.json && mv temp.json deploymentSettings.json
  
    - name: Import Kudos solution to prod environment with deployment settings
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: "https://orgae9e123c.crm.dynamics.com"
        app-id: ${{secrets.PPAPPID}}
        client-secret: ${{ secrets.PPAPPSECRET }}
        tenant-id: ${{secrets.PPTENANTID}}
        solution-file: ${{ env.solution_release_folder}}/${{ env.kudos_solution_name }}_managed.zip
        deployment-settings-file: ${{ env.solution_source_folder}}/deploymentSettings.json
        run-asynchronously: true
